//
// The main parser class.  This wraps the parser internals,
// which are generated by Lemon.
//

#include <iostream>

#include "Tokens.h"
#include "CParser.h"

using namespace std;

void *ParseAlloc(void *(*mallocProc)(size_t));
void ParseFree(void *,void (*freeProc)(void*));
void Parse(void *,int,Tokens *,CParser *);
void ParseTrace(FILE *, char *);

CParser::CParser() : 
  _parser(ParseAlloc(GC_malloc)),
  _error(false)
{
  //  ParseTrace(stdout,"lemon:  ");
}

void CParser::parse(int t,Tokens *tk) 
{ 
  //cout << "Token:  " << t << endl;
  _linenumber = tk->_ln;
  _filename = tk->_fn;
  Parse(_parser,t,tk,this); 
}

void CParser::reset()
{
  _error = false;
}
