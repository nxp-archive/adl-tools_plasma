//
// Simple test of a broadcasting thread.
//

#include <assert.h>
#include <stdio.h>
#include <plasma.h>

using namespace std;
using namespace plasma;

typedef Channel<int> IntChan;
typedef Broadcaster<IntChan,IntChan> IntBroadcaster;

typedef IntBroadcaster::input_channel input_channel;
typedef IntBroadcaster::output_channel output_channel;

void producer(int val,input_channel &chan) 
{
  for (int i = 0; i != 10; ++i) {
    chan.write(val+i);
  }
  chan.write(-1);
  plasma::mprintf ("Producer done.\n");
}

void consumer(int id,output_channel &chan)
{
  int v;
  do {
    v = chan.get();
    plasma::mprintf ("Got a value from port %d:  %d\n",id,v);
  } while (v >= 0);
  plasma::mprintf ("Consumer done.\n");
}

void pSetup(ConfigParms &cp) { cp._busyokay = true; }

int pMain(int argc,const char *argv[])
{ 
  IntBroadcaster ib(5);

  par {
    producer(10,ib.get_source());
    pfor (unsigned i = 0; i != ib.size(); ++i) {
      consumer(i,ib.get_sink(i));
    }
  }
  plasma::mprintf ("Done.\n");
  return 0;
}
