
#include <assert.h>
#include <stdio.h>
#include <plasma.h>

using namespace std;
using namespace plasma;

typedef plasma::Channel<int> IntChan;

void consumer(IntChan &c)
{
  const int Done = 10;
  Timeout t(20);
  for (int count = 0; count != Done; ++count) {
    alt {
      c.port(int v) {
        mprintf ("Got value from channel:  %d at time %lld\n",v,pTime());
      }
      t.port () {
        mprintf ("Got timeout at time %lld\n",pTime());
      }
    }
  }
  mprintf ("Consumer done.\n");
}

void producer(IntChan &c)
{
  c.write(100);
  pDelay(5);
  c.write(200);
  pDelay(25);
  c.write(300);
  c.write(400);
  mprintf ("Producer done.\n");
}

int pMain(int argc,const char *argv[])
{ 
  IntChan c;
  par {
    producer(c);
    consumer(c);
  }
  mprintf ("Done.\n");
  return 0;
}
