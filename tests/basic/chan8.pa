//
// Tests a queued channel- all producer write to the same
// channel, which is then read by the consumer.  The size
// of the queue is not fixed.
//

#include <assert.h>
#include <stdio.h>
#include <plasma.h>

typedef plasma::QueueChan<int> IntQChan;

void producer(int val,int delay,IntQChan &chan) 
{
  for (int i = 0; i != 10; ++i) {
    chan.write(val+i);
    for (int j = 0; j != delay; ++j) {
      int x = x + 1;
    }
  }
  chan.write(-1);
  plasma::mprintf ("Producer done.\n");
}

// We don't use an alt block b/c we have
// only one channel; we can just directly
// get the value.
void consumer(int numprods,IntQChan &c)
{
  int donecount = 0;
  while (donecount < numprods) {
    int v = c.get();
    plasma::mprintf ("Read a value:  %d\n",v);
    if (v < 0) ++donecount;
  }
  plasma::mprintf ("Consumer done.\n");
}

int pMain(int argc,const char *argv[])
{ 
  IntQChan channel;

  par {
    producer(10,10000000,channel);
    producer(100,1000,channel);
    producer(1000,10,channel);
    producer(10000,10000000,channel);
    consumer(4,channel);
  }
  plasma::mprintf ("Done.\n");
  return 0;
}
