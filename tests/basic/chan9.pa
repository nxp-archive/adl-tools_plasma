//
// Tests a queued channel- all producer write to the same
// channel, which is then read by the consumer.  The size
// of the queue is fixed, so we emit a line to check the size.
//

#include <assert.h>
#include <stdio.h>
#include <plasma.h>

typedef plasma::QueueChan<int> IntQChan;

void producer(int val,int delay,IntQChan &chan) 
{
  for (int i = 0; i != 10; ++i) {
    chan.write(val+i);
    for (int j = 0; j != delay; ++j) {
      int x = x + 1;
    }
  }
  chan.write(-1);
  printf ("Producer done.\n");
}

void consumer(IntQChan &c)
{
  int donecount = 0;
  while (donecount <  4) {
    printf ("Queue size:  %d\n",c.size());
    assert(c.size() <= c.maxsize());
    alt {
      port (int v;c;) {
        printf ("Read a value:  %d\n",v);
        if (v < 0) ++donecount;
      }
    }
  }
  printf ("Consumer done.\n");
}

int pMain(int argc,const char *argv[])
{ 
  IntQChan channel(3);

  par {
    producer(10,10,channel);
    producer(100,10,channel);
    producer(1000,10,channel);
    producer(10000,10,channel);
    consumer(channel);
  }
  printf ("Done.\n");
  return 0;
}
