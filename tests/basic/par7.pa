//
// Test of nested par/pfor w/on blocks.
//
#include <iostream>
#include <iterator>

using namespace std;
using namespace plasma;

typedef vector<pair<double,double> > Doubles;

void a()
{
  const int N = 5;
  Processors procs(N);
  Doubles results(N);
  pfor (int i = 0; i != N; ++i) {
    par {
      on (procs[i]) {
        results[i].first = (i+1)*10;
      }
      on (procs[i],0) {
        results[i].second = (i+1)*12.5;
      }
    }
  }
  cout << "Result is:  ";
  for (unsigned i = 0; i != results.size(); ++i) {
    cout << results[i].first << " " << results[i].second << " ";
  }
  cout << endl;
}

void b()
{
  const int N = 5;
  Processors procs(N);
  Doubles results(N);
  par {
    pfor (int i = 0; i != N; ++i) {
      on (procs[i]) {
        results[i].first = (i+1)*10;
      }
    }
    pfor (int i = 0; i != N; ++i) {
      on (procs[i]) {
        results[i].second = (i+1)*16.8;
      }
    }
  }
  cout << "Result is:  ";
  for (unsigned i = 0; i != results.size(); ++i) {
    cout << results[i].first << " " << results[i].second << " ";
  }
  cout << endl;
}

int pMain(int argc,const char *argv[])
{
  a();
  b();
  cout << "Done." << endl;
  return 0;
}
