;;
;; Various helper routines for this document.
;;

(define *prgm-color* "#ffffcc")
(define *output-color* "#ccbbcc")
(define *tab-width* 4)
(define *mark-prefix* "// skribe: ")
(define *source-code-sui* "source-code.sui")

(let ((he (find-engine 'html)))
  (engine-custom-set! he 'emit-sui #t))
  
(define (scref . args)
 (apply ref (append args (list ':skribe *source-code-sui*))))
  
;; Prepends the installation url if we think that this is a relative
;; (local) url.
(define (ubase x) 
	(define (local-url? x)
		(and (string? x)
			  (not (pregexp-match "://" x))))
	(cond 
		((local-url? x)
		 (string-append *target-url* x))
		(else
		 x)
))

(define b bold)
(define i it)

(define ssection subsection)

(define sssection subsubsection)

; Use this to insert left and right brackets.
(define (scn) (char ";"))
(define (lbr) (char "["))
(define (rbr) (char "]"))
(define (lprn) (char "("))
(define (rprn) (char ")"))

;; Use these for C and XML programs.
(define (cprog x) 
   (color :bg *prgm-color* 
	  (frame :width 100.0 
		 (prog :line #f 
		       (source :bg "#dddddd" :frame #t :tab *tab-width* :language C x)))))
		       		       
(define (cprogfile file)
   (color :bg *prgm-color* 
	  (frame :width 100.0 
		 (prog :line #f :mark *mark-prefix*
		       (source :bg "#dddddd" :frame #t :language C 
			  :tab *tab-width*
		       :file (string-append *test-dir* "/" file ))))))
		       
(define (cprogfilelines file start stop)
   (color :bg *prgm-color* 
	  (frame :width 100.0 
		 (prog :line #f   :mark *mark-prefix*
		       (source :bg "#dddddd" :frame #t :language C :start start
		       :stop stop :tab *tab-width*
		       :file (string-append *test-dir* "/" file ))))))


(define (cprogfileln-sub x)
(subsection :title x 
   (color :bg *prgm-color* 
	  (frame :width 100.0 
		 (prog :line 1 :mark *mark-prefix*
		       (source :bg "#dddddd" :frame #t :language C 
			  :tab *tab-width* 
			  :file (string-append *test-dir* "/" x)))))))

(define (cprogfileln-subsub x)
(subsubsection :title x  
   (color :bg *prgm-color* 
	  (frame :width 100.0 
		 (prog :line 1 :mark *mark-prefix*
		       (source :bg "#dddddd" :frame #t :language C 
			  :tab *tab-width* 
			  :file (string-append *test-dir* "/" x)))))))

		       			  